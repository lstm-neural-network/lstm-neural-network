[
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "Long Short-Term Memory (LSTM) neural networks have become extremely popular in the deep learning and data science space in recent years. After being largely ignored for decades, this type of recurrent neural networks (RNN) have garnered significant attention due to their ability to model sequential data and capture long-term dependencies in data, making them perfectly suited for tasks such as language and speech processing, time series analysis, and much more. LSTM models get their power from their capacity to effectively handle the vanishing and exploding gradient problem seen with other RNN’s, enabling the modeling of sequential data with a great level of precision. As a result, LSTM networks have become a cornerstone of machine learning.\nThis paper dives into the history of LSTM neural networks, diving into previous literature and research studies conducted using LSTM. We then plan on putting an LSTM model to the test by seeing how accurately it can predict financial time series data, specifically looking at numerous companies listed on the New York Stock Exchange. While modeling financial data is an extremely difficult task due to the unpredictability of financial markets, we will explore whether they hold any potential to accurately predict short and medium term movements in stock prices. Our hope is this paper can spur further research into the ability to accurately model financial data and how such modeling can be improved in the years to come.\n1.1 What is LSTM\nLong short-term memory networks are a type of recurrent neural network that is specifically designed to solve sequence prediction problems. Sequence prediction problems are problems involving predicting the next value based on a given input. A simple example is the input [1, 2, 3, 4, 5] and the sequence prediction model would output [6] as the next digit in the sequence. Historically, other RNNs (Recurrent Neural Network) have faced the challenge of the weights being changed too quickly after a few cycles, meaning the results would be either so small that it won’t affect the output (vanishing gradients) or too large that it results in an overflow (exploding gradients). LSTMs overcome this challenge by regulating the weights with three “gates.” The Forget gate decides what information to discard from the cell, the Input gate decides which values from the input to update the memory cell, and the output gate decides what to output based on input and the memory of the cell.\n1.2 Applications of LSTM Networks\nLong short term memory (LSTM) models are used in a wide range of situations. The influence of the LSTM network has been notable in natural language modeling, speech recognition, machine translation, and other applications[1]. LSTM networks were mainly created to solve the exploding/vanishing gradient problem[1]. Their capacity to model and understand long range dependencies makes them critical in executing various tasks. The advantage of using LSTMs over other recurrent neural networks is that an LSTM is able to save the data for much longer periods[2] than their RNN counterparts. They are especially essential in the field of finance because they can solve several problems such as identifying complex patterns in past pricing data, forecasting stock prices and the movement of the financial markets as a whole. With their ability to handle complicated sequential data, LSTMs have revolutionized how we approach and resolve issues involving sequences of information. They have become an essential tool in many machine learning and artificial intelligence fields. \nReferences\n\nA. Sherstinsky, “Fundamentals of Recurrent Neural Network (RNN) and Long Short-Term Memory (LSTM) network,” Physica D: Nonlinear Phenomena, vol. 404, p. 132306, Mar. 2020, doi:https://doi.org/10.1016/j.physd.2019.132306.\n\n\nP. Chaajer, M. Shah, and A. Kshirsagar, “The applications of artificial neural networks, support vector machines, and long-short term memory for stock market prediction,” Decision Analytics Journal, p. 100015, Nov. 2021, doi:\nhttps://doi.org/10.1016/j.dajour.2021.100015."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "3  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "lstm-neural-network",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books."
  },
  {
    "objectID": "Data.html",
    "href": "Data.html",
    "title": "2  Data",
    "section": "",
    "text": "For this project we will be using the historical stock market data going back 5 years for two publicly traded companies, Apple - sticker AAPL & General Motors - sticker GM. We will mainly focus on AAPL as our subject data set as we test how accurately LSTMS can predict financial time series data. GM will be used to compare/contrast the results between the companies. The data is sourced using the yfinance package in python, yfinance is an open source tool that uses Yahoo’s publicly available APIs to download market data. Below you will find the code snippet to download the data.\n\n#Downloading the Data\n\n!pip install yfinance\nimport yfinance as yf\nfrom datetime import datetime\n\n#Stocks that we'll be analyzing\nAAPL = ['AAPL']\nGM = ['GM']\n\n#Set start and end date for the data pull\n#We want to look at the past 5 years, so we'll pull the previous 5 years of data\nend_time = datetime.now()\nstart_time = datetime(end_time.year - 5, end_time.month, end_time.day)\n\n#download the stocks we want to model into seperate dataframes\nAAPL = yf.download(AAPL, start_time, end_time, actions=True)\nGM = yf.download(GM, start_time, end_time)\n\n#View the data\nAAPL.head(10)\n\nCollecting yfinance\n  Downloading yfinance-0.2.31-py2.py3-none-any.whl (65 kB)\n     ---------------------------------------- 65.6/65.6 kB 1.8 MB/s eta 0:00:00\nCollecting frozendict>=2.3.4\n  Downloading frozendict-2.3.8-cp310-cp310-win_amd64.whl (35 kB)\nCollecting multitasking>=0.0.7\n  Downloading multitasking-0.0.11-py3-none-any.whl (8.5 kB)\nCollecting beautifulsoup4>=4.11.1\n  Downloading beautifulsoup4-4.12.2-py3-none-any.whl (142 kB)\n     -------------------------------------- 143.0/143.0 kB 2.1 MB/s eta 0:00:00\nRequirement already satisfied: numpy>=1.16.5 in c:\\users\\princ\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from yfinance) (1.23.3)\nRequirement already satisfied: pandas>=1.3.0 in c:\\users\\princ\\appdata\\roaming\\python\\python310\\site-packages (from yfinance) (1.5.0)\nRequirement already satisfied: lxml>=4.9.1 in c:\\users\\princ\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from yfinance) (4.9.3)\nCollecting peewee>=3.16.2\n  Downloading peewee-3.16.3.tar.gz (928 kB)\n     -------------------------------------- 928.0/928.0 kB 3.1 MB/s eta 0:00:00\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting html5lib>=1.1\n  Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n     -------------------------------------- 112.2/112.2 kB 3.3 MB/s eta 0:00:00\nCollecting pytz>=2022.5\n  Downloading pytz-2023.3.post1-py2.py3-none-any.whl (502 kB)\n     -------------------------------------- 502.5/502.5 kB 3.9 MB/s eta 0:00:00\nRequirement already satisfied: requests>=2.31 in c:\\users\\princ\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from yfinance) (2.31.0)\nCollecting appdirs>=1.4.4\n  Downloading appdirs-1.4.4-py2.py3-none-any.whl (9.6 kB)\nCollecting soupsieve>1.2\n  Downloading soupsieve-2.5-py3-none-any.whl (36 kB)\nCollecting webencodings\n  Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\nRequirement already satisfied: six>=1.9 in c:\\users\\princ\\appdata\\roaming\\python\\python310\\site-packages (from html5lib>=1.1->yfinance) (1.16.0)\nRequirement already satisfied: python-dateutil>=2.8.1 in c:\\users\\princ\\appdata\\roaming\\python\\python310\\site-packages (from pandas>=1.3.0->yfinance) (2.8.2)\nRequirement already satisfied: idna<4,>=2.5 in c:\\users\\princ\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from requests>=2.31->yfinance) (3.4)\nRequirement already satisfied: certifi>=2017.4.17 in c:\\users\\princ\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from requests>=2.31->yfinance) (2023.7.22)\nRequirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\princ\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from requests>=2.31->yfinance) (2.0.6)\nRequirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\princ\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from requests>=2.31->yfinance) (3.3.0)\nBuilding wheels for collected packages: peewee\n  Building wheel for peewee (pyproject.toml): started\n  Building wheel for peewee (pyproject.toml): finished with status 'done'\n  Created wheel for peewee: filename=peewee-3.16.3-py3-none-any.whl size=135547 sha256=63b9a00b0b96d1abc7e0eeace693565d65e28081ef97370aea23a0ab3491665e\n  Stored in directory: c:\\users\\princ\\appdata\\local\\pip\\cache\\wheels\\c8\\ac\\6d\\ad6d828725ffbe3abc508c95d25dd0c5fcc63539ae47913790\nSuccessfully built peewee\nInstalling collected packages: webencodings, pytz, peewee, multitasking, appdirs, soupsieve, html5lib, frozendict, beautifulsoup4, yfinance\n  Attempting uninstall: pytz\n    Found existing installation: pytz 2022.4\n    Uninstalling pytz-2022.4:\n      Successfully uninstalled pytz-2022.4\nSuccessfully installed appdirs-1.4.4 beautifulsoup4-4.12.2 frozendict-2.3.8 html5lib-1.1 multitasking-0.0.11 peewee-3.16.3 pytz-2023.3.post1 soupsieve-2.5 webencodings-0.5.1 yfinance-0.2.31\n\n\n\n[notice] A new release of pip available: 22.2.2 -> 23.2.1\n[notice] To update, run: python.exe -m pip install --upgrade pip\n\n\n[*********************100%%**********************]  1 of 1 completed\n\n\n\n1 Failed download:\n\n\n['AAPL']: Exception('%ticker%: No timezone found, symbol may be delisted')\n\n\n\n\n\n[*********************100%%**********************]  1 of 1 completed\n\n\n\n1 Failed download:\n\n\n['GM']: Exception('%ticker%: No timezone found, symbol may be delisted')\n\n\n\n\n\n\n\n\n\n  \n    \n      \n      Open\n      High\n      Low\n      Close\n      Adj Close\n      Volume\n    \n    \n      Date\n      \n      \n      \n      \n      \n      \n    \n  \n  \n  \n\n\n\n\n2.1 Data Variables Description\nSeveral variables are retrieved for each stock. The definitions for the variables are as follows :\nDate : This represents the date associated with each data point, such as daily stock prices.\nOpen : The stock price at the time of opening on a given trading day\nClose : The stock price at the time of closing on a given trading day\nHigh : The highest stock price reached on a given day.\nLow : The lowest stock price reached on a given day.\nDividends : The amount of dividends paid to shareholders.\nSplit ratio : If there have been stock splits, this variable indicates the split ratio.\nAdj Close : The closing stock price adjusted for any corporate actions such as dividends and stock splits.\nVolume : The total number of shares traded on a given day.\nMarket Capitalization : The total market value of the market’s shares.\nIn addition to the variables to the above variables, we are also going to add two more variables.\nPCT Change - this calculates the percentage change of the closing price.\nMoving Average - this variable will represent the average change of closing price for the series.\n2.2 Data Visualizations"
  }
]